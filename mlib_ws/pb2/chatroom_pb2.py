# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chatroom.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
# @@protoc_insertion_point(imports)


from mlibws.pb2 import cr_ans_pb2, cr_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='chatroom.proto',
  package='protocol',
  serialized_pb='\n\x0e\x63hatroom.proto\x12\x08protocol\x1a\x08\x63r.proto\x1a\x0c\x63r_ans.proto\"P\n\x07\x63hatmsg\x12\x1e\n\x02\x63r\x18\x01 \x01(\x0b\x32\x12.protocol.chatroom\x12%\n\x05\x63rans\x18\x02 \x01(\x0b\x32\x16.protocol.chatroom_ans')




_CHATMSG = _descriptor.Descriptor(
  name='chatmsg',
  full_name='protocol.chatmsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cr', full_name='protocol.chatmsg.cr', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crans', full_name='protocol.chatmsg.crans', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=52,
  serialized_end=132,
)

_CHATMSG.fields_by_name['cr'].message_type = cr_pb2._CHATROOM
_CHATMSG.fields_by_name['crans'].message_type = cr_ans_pb2._CHATROOM_ANS
DESCRIPTOR.message_types_by_name['chatmsg'] = _CHATMSG

class chatmsg(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CHATMSG

  # @@protoc_insertion_point(class_scope:protocol.chatmsg)


# @@protoc_insertion_point(module_scope)
